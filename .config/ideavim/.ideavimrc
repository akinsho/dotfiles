set number
set relativenumber
set visualbell
set clipboard+=unnamed
set scrolloff=10
set ignorecase
set smartcase
set incsearch
set hlsearch
set wrapscan
set notimeout
" set timeoutlen=5000

" Leader key
let mapleader = ","
let maplocalleader = " "

"==========================
" Plugins need to install "
"==========================
" - [x] ideavim
" - [x] String Manipulation
" - [x] Which-Key

" Plugins
set surround
set multiple-cursors
set which-key
set highlightedyank
set easymotion
set nerdtree
set commentary
set argtextobj
set exchange

" TODO: which-key plugins does not recognise , as leader !?
let g:WhichKey_FontSize = 15
let g:WhichKey_PrefixStyle = "bold"
let g:WhichKey_KeyStyle = "italic"
let g:WhichKey_ShowVimActions = "true"
let g:WhichKey_SortOrder = "by_key_prefix_first"
let g:WhichKeyDesc_redraw = "<Space>l Redraw screen"
let g:WhickKeyDesc_test = "<leader>A Go to Test File"

let g:WhichKeyDesc_git = '<Space>g Git'
let g:WhichKeyDesc_git_commit = "<Space>gc Git commit"
let g:WhichKeyDesc_git_status = "<Space>gs Git status"
let g:WhichKeyDesc_git_branches = "<Space>gb Git branches"

let g:WhichKeyDesc_refactors = ",r Refactors"
let g:WhichKeyDesc_refactors_rename = ",rn Rename element"
let g:WhichKeyDesc_refactors_reformat_code = ",rf Reformat code"

let g:WhichKeyDesc_actions = ",c Actions"
let g:WhichKeyDesc_actions_code_actions = ",ca Code actions"

let g:WhichKeyDesc_tools = "<Space>t Tools"
let g:WhichKeyDesc_tools_emulator_open = "<Space>te Emulator"

let g:WhichKeyDesc_go = 'g Go to'
let g:WhichKeyDesc_go_find_usages = "gr Find usages"

let g:WhickKeyDesc_move = ",m Move"
let g:WhichKeyDesc_move = ",mv Move"

let g:WhichKeyDesc_find = ",f Goto"
let g:WhichKeyDesc_find_go_to_file = ",ff Go to file"
let g:WhichKeyDesc_find_in_path = ",fs Find in path"

let g:WhichKeyDesc_alternate_file = ",, Alternate file"

let g:WhichKeyDesc_source_vimrc = ",sv Source vimrc"
let g:WhichKeyDesc_edit_vimrc = ",ev Edit vimrc"

nmap <S-C-n> <Plug>NextWholeOccurrence
xmap <S-C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
nmap <C-q> <Plug>SkipOccurrence
xmap <C-q> <plug>SkipOccurrence
nmap <C-x> <Plug>RemoveOccurrence
xmap <C-x> <Plug>RemoveOccurrence

" IDEAVIM config options
set ideajoin
" set ideastatusicon=gray

" Mappings
sethandler <c-j> a:vim
sethandler <c-k> a:vim

inoremap jk <Esc>
nmap Q gq
nnoremap <Leader><Tab> :tabnext<CR>
nnoremap <S-Tab> :tabprev<CR>\
nnoremap [<Space> :<CR>mzo<Esc>`z:<CR>
nnoremap ]<Space> :<CR>mzO<Esc>`z:<CR>
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-k> <C-w>k
nnoremap <C-j> <C-w>j
nnoremap j gj
nnoremap gj j
nnoremap k gk
nnoremap gk k
nnoremap Y y$
nnoremap n nzz
nnoremap N Nzz
xnoremap < <gv
xnoremap > >gv

" Switch between alternate buffers
nnoremap <leader><leader> :b#<CR>

nmap <leader>sv <Action>(IdeaVim.ReloadVimRc.reload)
nnoremap <leader>ev :e ~/.config/ideavim/ideavimrc<CR>

nnoremap <space>l    :nohlsearch<CR>
nmap <Leader>q <Action>(CloseContent)
nmap <Leader>qa <Action>(CloseAllEditors)

nmap <c-p> <Action>(GotoAction)

" Distraction Free Mode
nmap <c-z> <Action>(ToggleDistractionFreeMode)

" {{{ String manipulation
" Plugin: String Manipulation
" Settigns: Do not add selection
map crc <Action>(StringManipulation.ToCamelCase)
map crp <Action>(StringManipulation.ToPascalCase)
map crk <Action>(StringManipulation.ToKebabCase)
map crs <Action>(StringManipulation.ToSnakeCase)
map crS <Action>(StringManipulation.ToCapitalizedSnakeCase)
" }}}

" {{{ Git
map <space>gg <Action>(VcsGroups)
map <space>gl <Action>(Git.Pull)
map <space>gp <Action>(Vcs.Push)
map <space>gb <Action>(Git.Branches)
map <space>gc <Action>(CheckinProject)
map <space>gs <Action>(Git.Stash)
" }}}

" Terminal
nmap <c-\> <Action>(ActivateTerminalToolWindow)
nmap <leader>t :action Terminal.OpenInTerminal<CR>

" Jump around with easymotion
nmap s <Plug>(easymotion-s)

nmap <CR> <Action>(Tree-selectNextExtendSelection)
nmap <S-CR> <Action>(Tree-selectPrevExtendSelection)

" Folding
nmap <leader>zc <Action>(CollapseAllRegions)
nmap <leader>zo <Action>(ExpandAllRegions)

" Actions
nmap [d <Action>(GotoNextError)
nmap ]d <Action>(GotoPreviousError)

nmap <leader>ff <Action>(GotoFile)
nmap <leader>fo <Action>(RecentFiles)
nmap <leader>fs <Action>(TextSearchAction)
nmap <leader>fp <Action>(FindInPath)
nmap <leader>A <Action>(GotoTest)
nmap <leader>mv <Action>(Move)
xmap <leader>mv <Action>(Move)
nmap gr <Action>(FindUsages)
nmap gd <Action>(GotoDeclaration)
nmap gD <Action>(QuickImplementations)
nmap gp <Action>(QuickImplementations)
nmap gy <Action>(GotoTypeDeclaration)
nmap gi <Action>(GotoImplementation)
nmap <leader>oi <Action>(OptimizeImports)
nmap <leader>rn <Action>(RenameElement)
nmap <leader>rf <Action>(ReformatCode)
nmap <leader>ca <Action>(Refactorings.QuickListPopupAction)
nmap <leader>a  <Action>(ShowIntentionActions)
xmap <leader>a  <Action>(ShowIntentionActions)
nmap gS   <Action>(EditorSplitLine)
nmap gJ   <Action>(EditorJoinLines)
nmap <c-z> <Action>(ToggleDistractionFreeMode)
nmap gh <Action>(ShowErrorDescription)
nmap <M-p> <Action>(JumpToLastWindow)
nmap <c-w>o <Action>(HideAllWindows)
nmap <c-\> <Action>(HideAllWindows)
nmap S <Action>(SurroundWith)
map  <C-s>      <Action>(SaveAll)
imap <C-s>      <Action>(SaveAll)
nmap <leader>s  <Action>(SaveAll)
nmap K  <Action>(ShowHoverInfo)
nmap <Leader>A <Action>(GotoTest)
map  <A-j> <Action>(MoveLineDown)
imap <A-j> <Action>(MoveLineDown)
map  <A-k> <Action>(MoveLineUp)
imap <A-k> <Action>(MoveLineUp)
" built-in navigation to navigated items works better
nmap <c-o> <Action>(Back)
nmap <c-i> <Action>(Forward)
nmap <c-=> <Action>Unsplit<CR>
"-------------------------------------------------------------
" Android Studio Specific
"-------------------------------------------------------------
if &ide =~? 'Android Studio'
    " Tool windows
    nmap <space>te <Action>(ActivateAndroidEmulatorToolWindow)
    " Alternatively: (ForceRefresh)
    nmap <leader>rr <Action>(Android.Designer.ForceRefreshPreview)
endif
"-------------------------------------------------------------

" but preserve ideavim defaults
nmap g<c-o> <c-o>
nmap g<c-i> <c-i>

" File Explorer
nmap <C-N> :NERDTreeToggle<CR>
let g:NERDTreeMapQuit = '<C-N>'

" Git
nmap <space>gc <Action>(ActivateCommitToolWindow)
nmap <space>gs <Action>(ActivateVersionControlToolWindow)
nmap <space>gb <Action>(Git.Branches)
nmap [h <Action>(VcsShowNextChangeMarker)
nmap ]h <Action>(VcsShowPrevChangeMarker)
map <leader>hr  <Action>(Vcs.RollbackChangedLines)
map <leader>hb  <Action>(GitToolBox.BlameDetails)
